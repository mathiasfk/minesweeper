{"version":3,"sources":["components/Cell/index.tsx","components/Board/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Cell","props","useState","clicked","setClicked","className","onClick","index","console","log","Board","cells","i","size","push","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAEaA,EAAO,SAACC,GAEnB,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAAO,sBAAKC,UAAW,SAAWF,EAAU,eAAiB,IAAKG,QAAS,kBAJ1DC,EAIwEN,EAAMM,MAH7FC,QAAQC,IAAIF,QACZH,GAAW,GAFG,IAACG,GAIV,cAAkGN,EAAMM,MAAxG,QCRIG,EAAQ,SAACT,GAGpB,IADA,IAAIU,EAAQ,GACJC,EAAE,EAAGA,EAAIX,EAAMY,KAAMD,IAE3BD,EAAMG,KAAK,cAAC,EAAD,CAAcP,MAAK,UAAKK,IAAbA,IAGxB,OACA,qBAAKP,UAAU,QAAf,SAEIM,KCGSI,MAbf,WACE,OACE,sBAAKV,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,yBAGA,qBAAKA,UAAU,kBAAf,SACE,cAAC,EAAD,CAAOQ,KAAM,WCING,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.a3602996.chunk.js","sourcesContent":["import { useState } from 'react';\n\nexport const Cell = (props:any) => {\n\n  const [clicked, setClicked] = useState(false);\n\n  const onClick = (index:number) => {\n    console.log(index);\n    setClicked(true);\n  };\n  return <div className={\"Cell \" + (clicked ? \"Cell-clicked\" : \"\")} onClick={() => onClick(props.index)}>[{props.index}]</div>;\n}","import { Cell } from \"../Cell\";\n\nexport const Board = (props:any) => {\n\n  let cells = [];\n  for(let i=0; i < props.size; i++)\n  {\n    cells.push(<Cell key={i} index={`${i}`}></Cell>);\n  }\n\n  return (\n  <div className=\"Board\">\n    {\n      cells\n    }\n  </div>\n)}","import './App.css';\nimport { Board } from './components/Board';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        Score: 1000\n      </header>\n      <div className=\"Board-container\">\n        <Board size={25}></Board>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}